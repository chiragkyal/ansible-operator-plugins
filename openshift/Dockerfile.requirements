FROM registry.ci.openshift.org/ocp/4.17:base-rhel9

RUN set -e && dnf clean all && rm -rf /var/cache/dnf/* \
  && dnf update -y \
  && dnf install -y rust cargo libffi-devel python3.12-devel gcc \
  && pushd /usr/local/bin && ln -sf ../../bin/python3.12 python3 && popd \
  && python3 -m ensurepip --upgrade

COPY ./Pipfile* ./

# The build dependencies are required by cachito. Following script
# does exactly the same. More info at: https://github.com/containerbuildsystem/cachito/blob/master/docs/pip.md#build-dependencies
RUN curl -LO https://raw.githubusercontent.com/containerbuildsystem/cachito/master/bin/pip_find_builddeps.py \
    && chmod +x pip_find_builddeps.py

RUN python3 -m pip install --upgrade pip

# Create requirements.in file from the pipenv created using the
# same Pipfile and Pipfile.lock used for upstream image. Then
# use pip-compile to generate the requirements.txt file. Copy
# setuptools into requirements-build.txt as pip-compile will
# omit it from the requierements.txt file.
RUN python3 -m pip install pipenv==2023.11.15 \
    && python3 -m pip install pip-tools \
    && pipenv install --deploy \
    # NOTE: This ignored vulnerability (71064) was detected in requests, \
    # but the upgraded version doesn't support the use case (protocol we are using).\
    # Ref: https://github.com/operator-framework/ansible-operator-plugins/pull/67#issuecomment-2189164688
    && pipenv check --ignore 71064 \
    && pipenv run pip freeze --all  > ./requirements.in \
    # TODO!
    && grep "requests==" ./requirements.in >> ./requirements-build.in || true \
    && grep "urllib3==" ./requirements.in >> ./requirements-build.in || true \
    && grep "ansible-runner==" ./requirements.in >> ./requirements-build.in || true \
    && grep "ansible-runner-http==" ./requirements.in >> ./requirements-build.in || true \
    && grep "ansible-runner==" ./requirements.in >> ./requirements-ansible-runner-build.in || true \
    && pip-compile --output-file=./requirements.txt ./requirements.in --strip-extras \
    # TODO: 
    && sed -i '/ansible-runner==/s/^/#/g' ./requirements.txt \
    && sed -i '/ansible-runner-http==/s/^/#/g' ./requirements.txt \
    && ./pip_find_builddeps.py requirements.txt -o requirements-build.in --append \
    && pip-compile --output-file=./requirements-build.txt ./requirements-build.in --strip-extras --allow-unsafe \
    # NOTE: Comment out cryptography and its dependencies from the requirements.txt
    # and requirements-build.txt files as these packages can't be installed in the
    # isolated environment of OSBS image build. These packages will be installed
    # through rpms.
    && sed -i '/cryptography==/s/^/#/g' ./requirements.txt \
    && sed -i '/cffi==/s/^/#/g' ./requirements.txt \
    && sed -i '/pycparser==/s/^/#/g' ./requirements.txt \
    && sed -i '/cffi==/s/^/#/g' ./requirements-build.txt \
    && sed -i '/pycparser==/s/^/#/g' ./requirements-build.txt \
    && sed -i '/maturin==/s/^/#/g' ./requirements-build.txt \
    # Add flit-core to requirements-pre-build.in file as this package is part of the
    # build dependencies of some packages in requirements-build.txt file.
    && grep "flit-core==" ./requirements-build.txt >> ./requirements-pre-build.in || true \
    && ./pip_find_builddeps.py requirements-ansible-runner-build.in -o requirements-pre-build.in --append \
    && pip-compile --output-file=./requirements-pre-build.txt ./requirements-pre-build.in --strip-extras --allow-unsafe

VOLUME /tmp/requirements
ENTRYPOINT ["cp", "./requirements.txt", "./requirements-build.txt", "./requirements-pre-build.txt", "/tmp/requirements/"]
